class Solution {
    public String longestPalindrome(String s) {
        int n = s.length();
        boolean[][] dp = new boolean[n][n];
        int start = 0;
        int max = 0;
        for(int i = n-1; i >= 0; i--) {
            for(int j = i; j < n; j++) {
                // i+1 and j-1
                // j-i < 3 comes first think why
                if(s.charAt(i) == s.charAt(j) && ( j-i < 3 || dp[i+1][j-1] == true  )) {
                    dp[i][j] = true;
                }
                if(dp[i][j] == true) {
                    if( j-i+1 > max) {
                        start = i;
                        max = j-i+1;
                    }
                }
            }
        }
        return s.substring(start, start+max);
    }
}
